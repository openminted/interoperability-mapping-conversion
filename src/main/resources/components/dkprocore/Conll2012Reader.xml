<?xml version="1.0" encoding="UTF-8"?>
<collectionReaderDescription xmlns="http://uima.apache.org/resourceSpecifier">
    <frameworkImplementation>org.apache.uima.java</frameworkImplementation>
    <implementationName>de.tudarmstadt.ukp.dkpro.core.io.conll.Conll2012Reader</implementationName>
    <processingResourceMetaData>
        <name>de.tudarmstadt.ukp.dkpro.core.io.conll.Conll2012Reader</name>
        <description>&lt;p&gt;Reads a file in the CoNLL-2009 format.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Document ID - &lt;b&gt;(ignored)&lt;/b&gt; This is a variation on the document filename.&lt;/li&gt;
&lt;li&gt;Part number - &lt;b&gt;(ignored)&lt;/b&gt; Some files are divided into multiple parts numbered as 000,
001, 002, ... etc.&lt;/li&gt;
&lt;li&gt;Word number - &lt;b&gt;(ignored)&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Word itself - &lt;b&gt;(document text)&lt;/b&gt; This is the token as segmented/tokenized in the
Treebank. Initially the *_skel file contain the placeholder [WORD] which gets replaced by the
actual token from the Treebank which is part of the OntoNotes release.&lt;/li&gt;
&lt;li&gt;Part-of-Speech - &lt;b&gt;(POS)&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Parse bit - &lt;b&gt;(Constituent)&lt;/b&gt; This is the bracketed structure broken before the first open
parenthesis in the parse, and the word/part-of-speech leaf replaced with a *. The full parse can
be created by substituting the asterix with the "([pos] [word])" string (or leaf) and
concatenating the items in the rows of that column.&lt;/li&gt;
&lt;li&gt;Predicate lemma - &lt;b&gt;(Lemma)&lt;/b&gt; The predicate lemma is mentioned for the rows for which we
have semantic role information. All other rows are marked with a "-"&lt;/li&gt;
&lt;li&gt;Predicate Frameset ID - &lt;b&gt;(SemanticPredicate)&lt;/b&gt; This is the PropBank frameset ID of the
predicate in Column 7.&lt;/li&gt;
&lt;li&gt;Word sense - &lt;b&gt;(ignored)&lt;/b&gt; This is the word sense of the word in Column 3.&lt;/li&gt;
&lt;li&gt;Speaker/Author - &lt;b&gt;(ignored)&lt;/b&gt; This is the speaker or author name where available. Mostly
in Broadcast Conversation and Web Log data.&lt;/li&gt;
&lt;li&gt;Named Entities - &lt;b&gt;(NamedEntity)&lt;/b&gt; These columns identifies the spans representing various
named entities.&lt;/li&gt;
&lt;li&gt;Predicate Arguments - &lt;b&gt;(SemanticPredicate)&lt;/b&gt; There is one column each of predicate
argument structure information for the predicate mentioned in Column 7.&lt;/li&gt;
&lt;li&gt;Coreference - &lt;b&gt;(CoreferenceChain)&lt;/b&gt; Coreference chain information encoded in a
parenthesis structure.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sentences are separated by a blank new line.&lt;/p&gt;</description>
        <version>1.8.0-SNAPSHOT</version>
        <vendor>DKPro Core Project</vendor>
        <copyright>Copyright 2010-2015
                            Ubiquitous Knowledge Processing (UKP) Lab
                            Technische Universit√§t Darmstadt</copyright>
        <configurationParameters>
            <configurationParameter>
                <name>sourceEncoding</name>
                <description/>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>readPOS</name>
                <description/>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>POSTagSet</name>
                <description>Use this part-of-speech tag set to use to resolve the tag set mapping instead of using the
tag set defined as part of the model meta data. This can be useful if a custom model is
specified which does not have such meta data, or it can be used in readers.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>POSMappingLocation</name>
                <description>Load the part-of-speech tag to UIMA type mapping from this location instead of locating
the mapping automatically.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>readLemma</name>
                <description>Disabled by default because CoNLL 2012 format does not include lemmata for all words, only
for predicates.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>readSemanticPredicate</name>
                <description/>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>readWordSense</name>
                <description/>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>readConstituent</name>
                <description/>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>readCoreference</name>
                <description/>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>readNamedEntity</name>
                <description/>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>ConstituentTagSet</name>
                <description>Use this constituent tag set to use to resolve the tag set mapping instead of using the
tag set defined as part of the model meta data. This can be useful if a custom model is
specified which does not have such meta data, or it can be used in readers.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>ConstituentMappingLocation</name>
                <description>Load the constituent tag to UIMA type mapping from this location instead of locating
the mapping automatically.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>internTags</name>
                <description>Use the String#intern() method on tags. This is usually a good idea to avoid
spaming the heap with thousands of strings representing only a few different tags.

Default: true</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>writeTracesToText</name>
                <description/>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>useHeaderMetadata</name>
                <description>Use the document ID declared in the file header instead of using the filename.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>sourceLocation</name>
                <description>Location from which the input is read.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>patterns</name>
                <description>A set of Ant-like include/exclude patterns. A pattern starts with #INCLUDE_PREFIX [+]
if it is an include pattern and with #EXCLUDE_PREFIX [-] if it is an exclude pattern.
The wildcard &lt;code&gt;&amp;#47;**&amp;#47;&lt;/code&gt; can be used to address any number of sub-directories.
The wildcard * can be used to a address a part of a name.</description>
                <type>String</type>
                <multiValued>true</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>useDefaultExcludes</name>
                <description>Use the default excludes.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>includeHidden</name>
                <description>Include hidden files and directories.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>language</name>
                <description>Name of optional configuration parameter that contains the language of the documents in the
input directory. If specified, this information will be added to the CAS.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
        </configurationParameters>
        <configurationParameterSettings>
            <nameValuePair>
                <name>sourceEncoding</name>
                <value>
                    <string>UTF-8</string>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>readPOS</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>readLemma</name>
                <value>
                    <boolean>false</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>readSemanticPredicate</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>readWordSense</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>readConstituent</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>readCoreference</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>readNamedEntity</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>internTags</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>writeTracesToText</name>
                <value>
                    <boolean>false</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>useHeaderMetadata</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>useDefaultExcludes</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>includeHidden</name>
                <value>
                    <boolean>false</boolean>
                </value>
            </nameValuePair>
        </configurationParameterSettings>
        <typeSystemDescription/>
        <fsIndexCollection/>
        <capabilities>
            <capability>
                <inputs/>
                <outputs>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Sentence</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Lemma</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemanticPredicate</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemanticArgument</type>
                </outputs>
                <languagesSupported/>
            </capability>
        </capabilities>
        <operationalProperties>
            <modifiesCas>true</modifiesCas>
            <multipleDeploymentAllowed>false</multipleDeploymentAllowed>
            <outputsNewCASes>true</outputsNewCASes>
        </operationalProperties>
    </processingResourceMetaData>
    <externalResourceDependencies>
        <externalResourceDependency>
            <key>resolver</key>
            <description>Name of optional external (UIMA) resource that contains the Locator for a (Spring)
ResourcePatternResolver implementation for locating (spring) resources.</description>
            <interfaceName>java.lang.Object</interfaceName>
            <optional>true</optional>
        </externalResourceDependency>
    </externalResourceDependencies>
</collectionReaderDescription>
