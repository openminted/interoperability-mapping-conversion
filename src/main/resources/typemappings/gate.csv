LAPPS,Type,Description,GATE,Type,Description
"Comments: 
- Most things in GATE are modelled by conventions on the names of annotation types and their features.  Normal text represents things that have a concrete representation in the GATE object model, italic text represents things that are conventional names rather than strongly typed properties.",,,,,
ABSTRACT TYPES,,,,,
Thing,<none>,The most generic specification,,,
Thing.propertiers.alternateName,String,An alias for the item,,,
,,,,,
Annotation,Thing,"Linguistic information added to a word, phrase, clause, sentence, text, or a relation among them",Annotation,Annotation,
Annotation.metadata.producer,URI[],The software that produced the annotations.,,,
Annotation.metadata.rules,URI[],The documentation (if any) for the rules that were used to identify the annotations.,,,
Annotation.properties.id,String,A unique identifier associated with the annotation.,Annotation.id,Integer,Unique identifier for the annotation
,,,,,
Span,Annotation,An annotation over a span of text. A Span may be defined by start and end offsets or by linking to one or more Token annotations with the targets property.,Annotation,Annotation,An annotation over a span of text.  All GATE annotations are described by start and end offsets.
Span.properties.targets,ID[],"IDs of a sequence of annotations covering the span of text referred to by this annotation. Used as an alternative to start and end to point to component annotations (e.g., a token sequence) rather than directly into primary data, or to link two or more annotations (e.g., in a coreference annotation).",,,
Span.properties.start,Integer,The starting offset (0-based) in the primary data.,Annotation.startOffset,Long,The starting offset (0-based) in the primary data.
Span.properties.end,Integer,The ending offset (0-based) in the primary data.,Annotation.endOffset,Long,The ending offset (0-based) in the primary data.
"Comments: 
- all annotations in GATE are anchored to offsets, but given that annotations can have arbitrary features, some types of annotation conventionally represent e.g. coreference chains as a feature whose value is a list of IDs of co-referring annotations.",,,,,
DOCUMENT/META-DATA LAYER,,,,,
Document,Thing,,Document,Document,
Document.properties.id,String,A unique identifier associated with the document.,Document.name,String,"Every GATE resource (including documents) can have a name, but it is not necessarily a unique ID"
Document.properties.source,String or URI,The source of the document.,Document.sourceUrl or Document.stringContent,URL or String,"The source of the document, either a URL or a plain text string"
Document.properties.sourceType,String or URI,"Source types include creator, distributor, contributor, publisher, etc.",,,
Document.properties.encoding,String or URI,"The physical or digital manifestation of the resource. Encoding may be used to determine the software, hardware or other equipment needed to display or operate the resource. Recommended best practice is to select a value from the list of Internet Media Types [http://www.iana.org/ assignments/media-types/] defining computer media formats).
                
See also http://dublincore.org/documents/2001/04/12/usageguide/sectd.shtml#format",Document.mimeType,String,MIME type used to determine the format parser GATE will use to extract the text from the document
Document.properties.language,String or URI,"A language of the intellectual content of the resource. Recommended best practice for the values of the Language element is defined by  RFC 3066 [RFC 3066, http://www.ietf.org/rfc/ rfc3066.txt] which, in conjunction with ISO 639 [ISO 639, http://www.oasis- open.org/cover/iso639a.html]), defines two- and three-letter  primary language tags with optional sub-tags. Examples include ""en"" or ""eng"" for English,  ""akk"" for Akkadian, and ""en-GB"" for English used in the United Kingdom.

See also http://dublincore.org/documents/2001/04/12/usageguide/sectd.shtml#language",Document.features.language,String,
,,,,,
TextDocument,Document,,"(GATE only supports textual documents, so all documents are implicitly text)",,
,,,,,
AudioDocument,Document,,Unsupported,,
"Comments:
- ...",,,,,
SEGMENTATION LAYER,,,,,
Token,Span,,Token,Annotation,
Token.metadata.posTagSet,String or URI,,,,
Token.properties.pos,String or URI,,Token.features.category,String,
Token.properties.lemma,String or URI,,Token.features.root,String,"Morphological root, also ""affix"" for the affix"
Token.properties.tokenType,String or URI,"Sub-type such as word, punctuation, abbreviation, number, symbol, etc. Ideally a URI referencing a pre-defined descriptor.",Token.features.kind,String,
Token.properties.orth,String or URI,"Orthographic properties of the token such as LowerCase, UpperCase, UpperInitial, etc. Ideally a URI referencing a pre-defined descriptor.",Token.features.orth,String,"GATE's default tokeniser uses lower camel-case names ""upperInitial"", ""allCaps"", ""lowercase"", ""mixedCaps"""
Token.properties.length,Integer,,Token.features.length,Long,
,,,,,
Sentence,Span,"A sequence of words capable of standing alone to make an assertion, ask a question, or give a command, usually consisting of a subject and a predicate containing a finite verb.",Sentence,Annotation,
Sentence.properties.sentenceType,String or URI,"Values such as declarative, interrogative, exclamatory, question, fragment. Ideally a URI referencing a pre-defined descriptor.",,,Not represented by the default GATE components
"Comments: 
- ...",,,,,
CHUNKING LAYER,,,,,
NounChunk,Span,"The initial portion of a non-recursive noun phrase up to the head, including determiners but not including postmodifying prepositional phrases or clauses.",NounChunk,Annotation,As produced by GATE default NP chunker
,,,,,
VerbChunk,Span,"Non-recursive verb groups, which include modals, auxiliary verbs, and medial adverbs, and end at the head verb or predicate adjective.",VG,Annotation,As produced by the verb group chunker
VerbChunk.vcType,String or URI,"Values such as finite, non-finite, participle, modal, special (e.g., 'is going to investigate').",VG.features.type,String,
VerbChunk.tense,String or URI,"Provides tense information for the verb. Example values include BeVBG, BeVBN, FutCon, HaveVBN, Pas, PasCon, PasPer, PasPerCon, Per, Pre, PreCon, PrePer, PrePerCon, SimFut, SimPas, SimPre, none",VG.features.tense,String,
VerbChunk.voice,String or URI,"Indicates if the verb group is active or passive. Possible values include ACTIVE, PASSIVE, or NONE",VG.features.voice,String,"""active"" or ""passive"""
VerbChunk.neg,String or URI,"Indicates whether or not the verb is negated. Values include YES, NO.",VG.features.neg,String,"""yes"" for negated verbs, feature absent on non-negated ones"
"Comments: 
- ...",,,,,
NAMED ENTITY LAYER,,,,,
NamedEntity,Span,,,,
,,,,,
Date,NamedEntity,,Date,Annotation,
Date.properties.dateType,String or URI,"Sub-type information such as date, datetime, time, etc. Ideally a URI referencing a pre-defined descriptor.",Date.features.kind,String,
,,,DateNormalizer plugin adds extra features like normalized value (YYYYMMDD as a number),,
,,,,,
Location,NamedEntity,,Location,Annotation,
Location.properties.locType,String or URI,"Location type: country, city, GPE, sea, lake, etc. Ideally a URI referencing a pre-defined descriptor.",Location.features.locType,String,
,,,,,
Organization,NamedEntity,,Organization,Annotation,
Organization.properties.orgType,String or URI,"Sub-type information (e.g., government, educational, religious, political, museum, hotel, medical, etc.). Ideally a URL referencing a pre-defined descriptor.",Organization.features.orgType,String,
,,,,,
Person,NamedEntity,,Person,Annotation,
Person.properties.gender,String or URI,"A value such as male, female, unknown. Ideally a URI referencing a pre-defined descriptor.",Person.features.gender,String,
,,,,,
,,,Mention,Annotation,Mentions of concepts in a knowledge base for semanically linked annotation tasks
,,,Mention.features.inst,URI,URI of the instance to which the mention links
,,,Mention.features.class,URI,URI of the (main) ontology class to which the instance belongs
"Comments: 
- ...",,,,,
COREFERENCE LAYER,,,,,
Coreference,Annotation,Used to mark references to other mentions of the same entity or instance.,,,
Coreference.properties.mentions,ID[],"A list of identifiers. Each identifier points to an object of type Annotation, or a subtype thereof.",,,
Coreference.properties.representative,ID,An identifier that points to the representative item in the coreference chain.,,,
,,,,,
Markable,Span,Annotation type used if the coreferenced item is not already wrapped in a suitable annotation type that can be referenced.,,,
"Comments: 
- Coreference in GATE is modelled as a feature of the annotations being co-referred, and as a document-level map of coreference chains",,,,,
CONSTITUENCY LAYER,,,,,
PhraseStructure,Annotation,A container for phrase structure information.,SyntaxTreeNode,Annotation,"GATE models syntax trees as nodes, representing constituents by containment"
PhraseStructure.metadata.categorySet,String or URI,The URI for the category set.,,,
PhraseStructure.properties.constituents,ID[] (Set),The set of IDs for the top-level Constituents in the paarse tree. (cf. https://github.com/lapps/vocabulary-pages/issues/15),,,
,,,,,
Constituent,Span,,SyntaxTreeNode,,
Constituent.properties.label,String or URI,,,,
Constituent.properties.parent,ID,,SyntaxTreeNode.features.consists,,
Constituent.properties.children,ID[],,,,
"Comments: 
- ...",,,,,
DEPENDENCY LAYER,,,,,
DependencyStructure,Annotation,,,,
DependencyStructure.metadata.dependencySet,String or URI,,,,
DependencyStructure.properties.dependencyType,String of URI,,,,
DependencyStructure.properties.dependencies,ID[] (Set),,,,
,,,,,
Dependency,Annotation,,Dependency,Annotation,"GATE's wrapper for the Stanford Parser represents dependencies in two ways, as annotations that link to the dependent and governing Tokens by ID, and as a complex feature value on the Token itself giving its outgoing dependency arcs"
Dependency.properties.governor,ID,,Dependency.features.args[0],List of Integer,"""args"" is a list with the governer token ID first and the dependent second"
Dependency.properties.dependent,ID,,Dependency.features.args[1],,
Dependency.properties.label,String or URI,,Dependency.features.kind,String,Dependency type
"Comments:
- The alternative representation of dependencies is as a feature ""dependencies"" on each governing Token annotation, whose value is a list of objects that encode the dependency label and the ID of the dependent token.",,,,,