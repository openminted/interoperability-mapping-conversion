<?xml version="1.0" encoding="UTF-8"?>
<collectionReaderDescription xmlns="http://uima.apache.org/resourceSpecifier">
    <frameworkImplementation>org.apache.uima.java</frameworkImplementation>
    <implementationName>uk.ac.nactem.uima.twitter.collectionreader.TwitterCollectionReader</implementationName>
    <processingResourceMetaData>
        <name>Twitter Collection Reader</name>
        <configurationParameters>
            <configurationParameter>
                <name>oAuthConsumerKey</name>
                <description/>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>oAuthConsumerSecret</name>
                <description/>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>oAuthAccessToken</name>
                <description/>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>oAuthAccessTokenSecret</name>
                <description/>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>debugEnabled</name>
                <description/>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>query</name>
                <description>A UTF-8, URL-encoded search query of 1,000 characters maximum, including operators. Queries may additionally be limited by complexity. Example Values: @noradio</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>count</name>
                <description>The number of tweets to return per page, up to a maximum of 100. Defaults to 15. Example Values: 100</description>
                <type>Integer</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>totalCount</name>
                <description>The total number of tweets to return. Defaults to 1000. Example Values: 500</description>
                <type>Integer</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>geoCode</name>
                <description>Returns tweets by users located within a given radius of the given latitude/longitude. The location is preferentially taking from the Geotagging API, but will fall back to their Twitter profile. The parameter value is specified by 'latitude,longitude,radius', where radius units must be specified as either 'mi' (miles) or 'km' (kilometers). Note that you cannot use the near operator via the API to geocode arbitrary locations; however you can use this geocode parameter to search near geocodes directly. A maximum of 1,000 distinct 'sub-regions' will be considered when using the radius modifier. Example Values: 37.781157,-122.398720,1mi</description>
                <type>Float</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>lang</name>
                <description>Restricts tweets to the given language, given by an ISO 639-1 code. Language detection is best-effort. Example Values: eu</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>locale</name>
                <description>Specify the language of the query you are sending (only ja is currently effective). This is intended for language-specific consumers and the default should work in the majority of cases. Example Values: ja</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <!--  configurationParameter>
                <name>maxId</name>
                <description>Returns results with an ID less than (that is, older than) or equal to the specified ID. Example Values: 54321</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter -->
            <configurationParameter>
                <name>resultType</name>
                <description>Specifies what type of search results you would prefer to receive. The current default is 'mixed' Valid values include:  mixed: Include both popular and real time results in the response. recent: return only the most recent results in the response.  popular: return only the most popular results in the response. Example Values: mixed, recent, popular</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>sinceId</name>
                <description>Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available. Example Values: 12345</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
        </configurationParameters>
        <configurationParameterSettings>
        </configurationParameterSettings>
        <typeSystemDescription>
      		<imports>
        		<import name="uk.ac.nactem.uima.TwitterTypeSystem"/>
        		<import name="org.apache.uima.examples.SourceDocumentInformation"/>
        	</imports>
    	</typeSystemDescription>
        <fsIndexCollection/>
        <capabilities/>
        <operationalProperties>
            <modifiesCas>true</modifiesCas>
            <multipleDeploymentAllowed>false</multipleDeploymentAllowed>
            <outputsNewCASes>true</outputsNewCASes>
        </operationalProperties>
    </processingResourceMetaData>
</collectionReaderDescription>

