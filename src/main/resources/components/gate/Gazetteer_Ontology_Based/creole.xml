<?xml version="1.0" encoding="UTF-8"?>
<!-- creole.xml for Ontology_Based_Gazetteer plugin --><CREOLE-DIRECTORY>
  <JAR>obg.jar</JAR>
<RESOURCE><CLASS>gate.clone.ql.OntoRootGaz</CLASS><NAME>Onto Root Gazetteer</NAME><COMMENT>An ontology lookup component</COMMENT><HELPURL>http://gate.ac.uk/userguide/sec:gazetteers:ontoRootGaz</HELPURL><ICON>gazetteer</ICON><PARAMETER NAME="ontology" COMMENT="The ontology to be used">gate.creole.ontology.Ontology</PARAMETER><PARAMETER NAME="typesToConsider" ITEM_CLASS_NAME="java.lang.String" COMMENT="The list of types to be included. Possible values: instance, class, property" DEFAULT="class;instance;property" RUNTIME="true">java.util.Set</PARAMETER><PARAMETER NAME="rootFinderApplication" COMMENT="Application to find the roots that go into the gazetteer.  Executed over a document containing a single Sentence annotation spanning the whole document, this application should produce Token annotations with category (POS tag) and root (morphological root) features.  Typically that means a tokeniser, POS tagger and morphological analyser, but any application producing the correct features will work">gate.CorpusController</PARAMETER><PARAMETER NAME="considerProperties" COMMENT="Should this gazetteer consider properties or not" DEFAULT="true">java.lang.Boolean</PARAMETER><PARAMETER NAME="useResourceUri" COMMENT="Should this gazetteer use resource URIs or not" DEFAULT="true">java.lang.Boolean</PARAMETER><PARAMETER NAME="separateCamelCasedWords" COMMENT="Should this gazetteer separate camelCased words, e.g. ProjectName into Project Name" DEFAULT="true">java.lang.Boolean</PARAMETER><PARAMETER NAME="propertiesToExclude" COMMENT="The list of property names to be excluded, comma separated" DEFAULT="" OPTIONAL="true">java.lang.String</PARAMETER><PARAMETER NAME="propertiesToInclude" COMMENT="The list of property names to be included, comma separated" DEFAULT="" OPTIONAL="true">java.lang.String</PARAMETER><PARAMETER NAME="considerHeuristicRules" COMMENT="Should this gazetteer consider several heuristic rules or not: the words containing spaces will be split; for example, if 'pos tagger for spanish' would be analysed, 'for' would be consider as a stop word; heuristically derived would be 'pos tagger' and this would be further used to add 'pos tagger' with heuristical level 0, and 'tagger' with hl 1 to the gazetteer list; at runtime lower heuristical level should be prefered" DEFAULT="false">java.lang.Boolean</PARAMETER><PARAMETER NAME="caseSensitive" COMMENT="Should this gazetteer diferentiate on case?" DEFAULT="true">java.lang.Boolean</PARAMETER><PARAMETER NAME="annotationSetName" COMMENT="The annotation set to be used for the generated annotations" RUNTIME="true" OPTIONAL="true">java.lang.String</PARAMETER><PARAMETER NAME="longestMatchOnly" COMMENT="Should this gazetteer only match the longest string starting from any offset?" DEFAULT="true" RUNTIME="true">java.lang.Boolean</PARAMETER><PARAMETER NAME="wholeWordsOnly" COMMENT="Should this gazetteer only match whole words?" DEFAULT="true" RUNTIME="true">java.lang.Boolean</PARAMETER><PARAMETER NAME="corpus" COMMENT="The corpus containing the document to process" RUNTIME="true" OPTIONAL="true">gate.Corpus</PARAMETER><PARAMETER NAME="document" COMMENT="The document to process" RUNTIME="true">gate.Document</PARAMETER></RESOURCE></CREOLE-DIRECTORY>
