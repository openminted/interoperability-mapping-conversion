<alvisnlp-doc author="Robert Bossy" date="2010-10-28" short-target="SimpleProjector" target="org.bibliome.alvisnlp.modules.projectors.SimpleProjector" use-instead="org.bibliome.alvisnlp.modules.trie.SimpleProjector2">
  <synopsis>
    <p>Projects a simple dictionary on sections.</p>
  </synopsis>

  <module-doc>
    <description>
      <p><this/> reads a list of entries from <param name="dictFile"/> and searches for these entries in sections. The format of the dictionary is one entry per line. Each line is split into columns separated by tab characters, or whichever character defined by <param name="separator"/>. The first column will be the entry to be searched and the other columns are just data associated to the entry.</p>
      <p>The parameters <param name="skipBlankLines"/>, <param name="warnDuplicateValues"/>, <param name="strictColumnNumber"/>, <param name="multipleValueAction"/>, <param name="errorDuplicateValues"/>, <param name="warnMultipleValues"/> and <param name="trimColumns"/> control the loading of the dictionary.</p>
      <p>The parameters <param name="normalizeSpace"/>, <param name="ignoreCase"/>, <param name="ignoreDiacritics"/> and <param name="ignoreWhitespace"/> control the matching of entries on the sections.</p>
      <p>The <param name="subject"/> parameter specifies which text of the section should be matched. There are two options:
      <ul>
	<li>the entries are matched on the contents of the section, <param name="subject"/> can also control if matches boundaries coincide with word delimiters;</li>
	<li>the entries are matched on the feature value of annotations of a given layer separated by a whitespace, in this way entries can be searched against word lemmas for instance.</li>
      </ul>
      </p>
      <p><this/> creates an annotation for each matched entry and adds these annotations to the layer named <param name="targetLayerName"/>. The created annotations will have features whose keys correspond to <param name="entryFeatureNames"/> and values to the data associated to the matched entry (columns in the dictionary file). For instance if <param name="entryFeatureNames"/> is <em>[a,b,c]</em>, then each annotation will have three features named <em>a</em>, <em>b</em> and <em>c</em> with the respective values of the entry's second, third and fourth columns. Keep in mind that the first column is the entry key and will not be stored in a feature. A feature name left blank in <param name="entryFeatureNames"/> will not create a feature. Thus, in order not to keep the entry in the <em>a</em> feature, <param name="entryFeatureNames"/> should be <em>[,b,c]</em>.<nl/>In addition, the created annotations will have the feature keys and values defined in <param name="constantAnnotationFeatures"/>.</p>
    </description>
  
    <param-doc mandatory="default: true" name="skipBlankLines" short-type="Boolean" type="java.lang.Boolean">
      <p>Either to skip empty lines and lines that contains only whitespace in the dictionary.</p>
    </param-doc>
  
    <param-doc mandatory="default: true" name="active" short-type="Expression" type="alvisnlp.corpus.expressions.Expression">
      <p>This expression is evaluated as a boolean with the corpus as the context element, the module will process the document only if the result is true.</p>
    </param-doc>
      
    <param-doc mandatory="required" name="dictFile" short-type="SourceStream" type="org.bibliome.util.streams.SourceStream">
      <p>Path to the dictionary file.</p>
    </param-doc>
  
    <param-doc mandatory="default: false" name="normalizeSpace" short-type="Boolean" type="java.lang.Boolean">
      <p>Match normalizing whitespace, that is replacing consecutive whitespace characters (including newlines) with a single space character.</p>
    </param-doc>
  
    <param-doc mandatory="default: false" name="strictColumnNumber" short-type="Boolean" type="java.lang.Boolean">
      <p>Check that all lines in the dictionary file contains the same number of columns than <param name="entryFeatureNames"/>.</p>
    </param-doc>
  
    <param-doc mandatory="default: add" name="multipleValueAction" short-type="MultipleValueAction" type="org.bibliome.alvisnlp.modules.projectors.MultipleValueAction">
      <p>Either to stop when multiple entries with the same key is seen.</p>
    </param-doc>
  
    <param-doc mandatory="optional" name="constantAnnotationFeatures" short-type="Mapping" type="alvisnlp.module.types.Mapping">
      <p>Constant features to add to each annotation created by this module.</p>
    </param-doc>
  
    <param-doc mandatory="default: org.bibliome.alvisnlp.modules.projectors.ContentsSubject@20e2fdf4" name="subject" short-type="Subject" type="org.bibliome.alvisnlp.modules.projectors.Subject">
      <p>Section text on which to project the dictionary. See <a href="Subject"/> converter.</p>
    </param-doc>
  
    <param-doc mandatory="default: false" name="ignoreCase" short-type="Boolean" type="java.lang.Boolean">
      <p>Match ignoring case.</p>
    </param-doc>
  
    <param-doc mandatory="default: &#9;" name="separator" short-type="Character" type="java.lang.Character">
      <p>Character that separates entry columns in the dictionary file.</p>
    </param-doc>
  
    <param-doc mandatory="default: true" name="documentFilter" short-type="Expression" type="alvisnlp.corpus.expressions.Expression">
      <p>Only process document that satisfy this filter.</p>
    </param-doc>
  
    <param-doc mandatory="default: false" name="errorDuplicateValues" short-type="Boolean" type="java.lang.Boolean">
      <p>Either to stop when a duplicate entry is seen.</p>
    </param-doc>
  
    <param-doc mandatory="default: true" name="sectionFilter" short-type="Expression" type="alvisnlp.corpus.expressions.Expression">
      <p>Process only sections that satisfy this filter.</p>
    </param-doc>
  
    <param-doc mandatory="default: false" name="ignoreDiacritics" short-type="Boolean" type="java.lang.Boolean">
      <p>Match ignoring diacritics.</p>
    </param-doc>
  
    <param-doc mandatory="default: false" name="ignoreWhitespace" short-type="Boolean" type="java.lang.Boolean">
      <p>Match ignoring whitespace characters. If this parameter value is true, then <this/> will act as if all whitespace characters in the subject and the entries have been removed.</p>
    </param-doc>
  
    <param-doc mandatory="default: true" name="trimColumns" short-type="Boolean" type="java.lang.Boolean">
      <p>Either to trim column values from leading and trailing whitespace characters.</p>
    </param-doc>
  
    <param-doc mandatory="default: " name="entryFeatureNames" short-type="String[]" type="java.lang.String[]">
      <p>Created annotations feature names for the entry columns.</p>
    </param-doc>
  
    <param-doc mandatory="required" name="targetLayerName" short-type="String" type="java.lang.String">
      <p>Name of the layer where to put created annotations.</p>
    </param-doc>
  </module-doc>
</alvisnlp-doc>
