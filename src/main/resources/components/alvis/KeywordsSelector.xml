<alvisnlp-doc author="" beta="yes" date="" short-target="KeywordsSelector" target="org.bibliome.alvisnlp.modules.keyword.KeywordsSelector">
  <synopsis>
    <p>Selects most relevant keywords in documents.</p>
  </synopsis>

  <module-doc>
    <description>
      <p>
	<this/> selects the most relevant keywords in documents. The candidate keywords are specified with <param name="keywords"/> evaluated as a list of elements with the document as the context element. The keyword text is specified by <param name="keywordForm"/>.
      </p>
      <p>
	<this/> ranks the keywords according to the <param name="scoreFunction"/> function, then selects the <param name="keywordCount"/> keywords with the highest value. The selected keywords are stored in the document feature <param name="keywordFeature"/>, and the corresponding scores in <param name="scoreFeature"/>. 
      </p>
    </description>
  
    <param-doc mandatory="default: true" name="active" short-type="Expression" type="alvisnlp.corpus.expressions.Expression">
      <p>Expression evaluated as a boolean with the corpus as context element. If the result is false, then the module does not process the module.</p>
    </param-doc>
  
    <param-doc mandatory="default: ABSOLUTE" name="scoreFunction" short-type="KeywordScoreFunction" type="org.bibliome.alvisnlp.modules.keyword.KeywordScoreFunction">
      <p>Function to use for ranking keywords. Available functions include the keyword frequency, different variants of tf-idf and Okapi BM25.</p>
    </param-doc>
  
    <param-doc mandatory="default: nav:.(nav:sections(), nav:layer:words())" name="keywords" short-type="Expression" type="alvisnlp.corpus.expressions.Expression">
      <p>Expression evaluated as a list of elements with the document as the context element. Each element represents a keyword of the document.</p>
    </param-doc>
  
    <param-doc mandatory="optional" name="scoreFeature" short-type="String" type="java.lang.String">
      <p>Document feature where to store the score of selected keywords computed by <param name="scoreFunction"/>.</p>
    </param-doc>
  
    <param-doc mandatory="default: properties:@:form()" name="keywordForm" short-type="Expression" type="alvisnlp.corpus.expressions.Expression">
      <p>Text of the keyword. This expression is evaluated as a string with the keyword element as the context.</p>
    </param-doc>
  
    <param-doc mandatory="default: 2147483647" name="keywordCount" short-type="Integer" type="java.lang.Integer">
      <p>Number of keywords to select.</p>
    </param-doc>
  
    <param-doc mandatory="optional" name="keywordFeature" short-type="String" type="java.lang.String">
      <p>Document feature where to store the selected keywords.</p>
    </param-doc>
  
    <param-doc mandatory="default: 0.0" name="scoreThreshold" short-type="Double" type="java.lang.Double">
      <p/>
    </param-doc>
  
    <param-doc mandatory="default: properties:@:id()" name="documentId" short-type="Expression" type="alvisnlp.corpus.expressions.Expression">
      <p/>
    </param-doc>
  
    <param-doc mandatory="default: nav:documents()" name="documents" short-type="Expression" type="alvisnlp.corpus.expressions.Expression">
      <p/>
    </param-doc>
  
    <param-doc mandatory="default: &#9;" name="separator" short-type="Character" type="java.lang.Character">
      <p/>
    </param-doc>
  
    <param-doc mandatory="default: UTF-8" name="charset" short-type="String" type="java.lang.String">
      <p/>
    </param-doc>
  
    <param-doc mandatory="optional" name="outFile" short-type="TargetStream" type="org.bibliome.util.streams.TargetStream">
      <p/>
    </param-doc>
  </module-doc>
</alvisnlp-doc>
