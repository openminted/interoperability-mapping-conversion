<?xml version="1.0" encoding="UTF-8"?>
<collectionReaderDescription xmlns="http://uima.apache.org/resourceSpecifier">
    <frameworkImplementation>org.apache.uima.java</frameworkImplementation>
    <implementationName>de.tudarmstadt.ukp.dkpro.core.io.conll.Conll2009Reader</implementationName>
    <processingResourceMetaData>
        <name>de.tudarmstadt.ukp.dkpro.core.io.conll.Conll2009Reader</name>
        <description>&lt;p&gt;Reads a file in the CoNLL-2009 format.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ID - &lt;b&gt;(ignored)&lt;/b&gt; Token counter, starting at 1 for each new sentence.&lt;/li&gt;
&lt;li&gt;FORM - &lt;b&gt;(Token)&lt;/b&gt; Word form or punctuation symbol.&lt;/li&gt;
&lt;li&gt;LEMMA - &lt;b&gt;(Lemma)&lt;/b&gt; Fine-grained part-of-speech tag, where the tagset depends on the
language, or identical to the coarse-grained part-of-speech tag if not available.&lt;/li&gt;
&lt;li&gt;PLEMMA - &lt;b&gt;(ignored)&lt;/b&gt; Automatically predicted lemma of FORM&lt;/li&gt;
&lt;li&gt;POS - &lt;b&gt;(POS)&lt;/b&gt; Fine-grained part-of-speech tag, where the tagset depends on the language,
or identical to the coarse-grained part-of-speech tag if not available.&lt;/li&gt;
&lt;li&gt;PPOS - &lt;b&gt;(ignored)&lt;/b&gt; Automatically predicted major POS by a language-specific tagger&lt;/li&gt;
&lt;li&gt;FEAT - &lt;b&gt;(MorphologicalFeatures)&lt;/b&gt; Unordered set of syntactic and/or morphological features (depending
on the particular language), separated by a vertical bar (|), or an underscore if not available.&lt;/li&gt;
&lt;li&gt;PFEAT - &lt;b&gt;(ignored)&lt;/b&gt; Automatically predicted morphological features (if applicable)&lt;/li&gt;
&lt;li&gt;HEAD - &lt;b&gt;(Dependency)&lt;/b&gt; Head of the current token, which is either a value of ID or zero
('0'). Note that depending on the original treebank annotation, there may be multiple tokens with
an ID of zero.&lt;/li&gt;
&lt;li&gt;PHEAD - &lt;b&gt;(ignored)&lt;/b&gt; Automatically predicted syntactic head&lt;/li&gt;
&lt;li&gt;DEPREL - &lt;b&gt;(Dependency)&lt;/b&gt; Dependency relation to the HEAD. The set of dependency relations
depends on the particular language. Note that depending on the original treebank annotation, the
dependency relation may be meaningfull or simply 'ROOT'.&lt;/li&gt;
&lt;li&gt;PDEPREL - &lt;b&gt;(ignored)&lt;/b&gt; Automatically predicted dependency relation to PHEAD&lt;/li&gt;
&lt;li&gt;FILLPRED - &lt;b&gt;(ignored)&lt;/b&gt; Contains 'Y' for argument-bearing tokens&lt;/li&gt;
&lt;li&gt;PRED - &lt;b&gt;(SemanticPredicate)&lt;/b&gt; (sense) identifier of a semantic 'predicate' coming from a
current token&lt;/li&gt;
&lt;li&gt;APREDs - &lt;b&gt;(SemanticArgument)&lt;/b&gt; Columns with argument labels for each semantic predicate
(in the ID order)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sentences are separated by a blank new line.&lt;/p&gt;</description>
        <version>1.8.0-SNAPSHOT</version>
        <vendor>DKPro Core Project</vendor>
        <copyright>Copyright 2010-2015
                            Ubiquitous Knowledge Processing (UKP) Lab
                            Technische Universit√§t Darmstadt</copyright>
        <configurationParameters>
            <configurationParameter>
                <name>sourceEncoding</name>
                <description/>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>readPOS</name>
                <description/>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>POSTagSet</name>
                <description>Use this part-of-speech tag set to use to resolve the tag set mapping instead of using the
tag set defined as part of the model meta data. This can be useful if a custom model is
specified which does not have such meta data, or it can be used in readers.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>POSMappingLocation</name>
                <description>Load the part-of-speech tag to UIMA type mapping from this location instead of locating
the mapping automatically.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>readMorph</name>
                <description/>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>readLemma</name>
                <description/>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>readDependency</name>
                <description/>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>readSemanticPredicate</name>
                <description/>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>sourceLocation</name>
                <description>Location from which the input is read.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>patterns</name>
                <description>A set of Ant-like include/exclude patterns. A pattern starts with #INCLUDE_PREFIX [+]
if it is an include pattern and with #EXCLUDE_PREFIX [-] if it is an exclude pattern.
The wildcard &lt;code&gt;&amp;#47;**&amp;#47;&lt;/code&gt; can be used to address any number of sub-directories.
The wildcard * can be used to a address a part of a name.</description>
                <type>String</type>
                <multiValued>true</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>useDefaultExcludes</name>
                <description>Use the default excludes.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>includeHidden</name>
                <description>Include hidden files and directories.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>language</name>
                <description>Name of optional configuration parameter that contains the language of the documents in the
input directory. If specified, this information will be added to the CAS.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
        </configurationParameters>
        <configurationParameterSettings>
            <nameValuePair>
                <name>sourceEncoding</name>
                <value>
                    <string>UTF-8</string>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>readPOS</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>readMorph</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>readLemma</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>readDependency</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>readSemanticPredicate</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>useDefaultExcludes</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>includeHidden</name>
                <value>
                    <boolean>false</boolean>
                </value>
            </nameValuePair>
        </configurationParameterSettings>
        <typeSystemDescription/>
        <fsIndexCollection/>
        <capabilities>
            <capability>
                <inputs/>
                <outputs>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Sentence</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Lemma</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemanticPredicate</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemanticArgument</type>
                </outputs>
                <languagesSupported/>
            </capability>
        </capabilities>
        <operationalProperties>
            <modifiesCas>true</modifiesCas>
            <multipleDeploymentAllowed>false</multipleDeploymentAllowed>
            <outputsNewCASes>true</outputsNewCASes>
        </operationalProperties>
    </processingResourceMetaData>
    <externalResourceDependencies>
        <externalResourceDependency>
            <key>resolver</key>
            <description>Name of optional external (UIMA) resource that contains the Locator for a (Spring)
ResourcePatternResolver implementation for locating (spring) resources.</description>
            <interfaceName>java.lang.Object</interfaceName>
            <optional>true</optional>
        </externalResourceDependency>
    </externalResourceDependencies>
</collectionReaderDescription>
