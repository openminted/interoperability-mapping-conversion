<?xml version="1.0" encoding="UTF-8"?>
<collectionReaderDescription xmlns="http://uima.apache.org/resourceSpecifier">
    <frameworkImplementation>org.apache.uima.java</frameworkImplementation>
    <implementationName>de.tudarmstadt.ukp.dkpro.core.io.conll.Conll2000Reader</implementationName>
    <processingResourceMetaData>
        <name>de.tudarmstadt.ukp.dkpro.core.io.conll.Conll2000Reader</name>
        <description>&lt;p&gt;Reads the Conll 2000 chunking format.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
He        PRP  B-NP
reckons   VBZ  B-VP
the       DT   B-NP
current   JJ   I-NP
account   NN   I-NP
deficit   NN   I-NP
will      MD   B-VP
narrow    VB   I-VP
to        TO   B-PP
only      RB   B-NP
#         #    I-NP
1.8       CD   I-NP
billion   CD   I-NP
in        IN   B-PP
September NNP  B-NP
.         .    O
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;FORM - token&lt;/li&gt;
&lt;li&gt;POSTAG - part-of-speech tag&lt;/li&gt;
&lt;li&gt;CHUNK - chunk (BIO encoded)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sentences are separated by a blank new line.&lt;/p&gt;</description>
        <version>1.8.0-SNAPSHOT</version>
        <vendor>DKPro Core Project</vendor>
        <copyright>Copyright 2010-2015
                            Ubiquitous Knowledge Processing (UKP) Lab
                            Technische Universit√§t Darmstadt</copyright>
        <configurationParameters>
            <configurationParameter>
                <name>sourceEncoding</name>
                <description>Character encoding of the input data.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>internTags</name>
                <description>Use the String#intern() method on tags. This is usually a good idea to avoid
spamming the heap with thousands of strings representing only a few different tags.

Default: true</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>readPOS</name>
                <description>Write part-of-speech information.

Default: true</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>POSTagSet</name>
                <description>Use this part-of-speech tag set to use to resolve the tag set mapping instead of using the
tag set defined as part of the model meta data. This can be useful if a custom model is
specified which does not have such meta data, or it can be used in readers.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>POSMappingLocation</name>
                <description>Load the part-of-speech tag to UIMA type mapping from this location instead of locating
the mapping automatically.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>readChunk</name>
                <description>Write chunk information.

Default: true</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>ChunkTagSet</name>
                <description>Use this chunk tag set to use to resolve the tag set mapping instead of using the
tag set defined as part of the model meta data. This can be useful if a custom model is
specified which does not have such meta data, or it can be used in readers.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>ChunkMappingLocation</name>
                <description>Load the chunk tag to UIMA type mapping from this location instead of locating
the mapping automatically.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>sourceLocation</name>
                <description>Location from which the input is read.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>patterns</name>
                <description>A set of Ant-like include/exclude patterns. A pattern starts with #INCLUDE_PREFIX [+]
if it is an include pattern and with #EXCLUDE_PREFIX [-] if it is an exclude pattern.
The wildcard &lt;code&gt;&amp;#47;**&amp;#47;&lt;/code&gt; can be used to address any number of sub-directories.
The wildcard * can be used to a address a part of a name.</description>
                <type>String</type>
                <multiValued>true</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>useDefaultExcludes</name>
                <description>Use the default excludes.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>includeHidden</name>
                <description>Include hidden files and directories.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>language</name>
                <description>Name of optional configuration parameter that contains the language of the documents in the
input directory. If specified, this information will be added to the CAS.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
        </configurationParameters>
        <configurationParameterSettings>
            <nameValuePair>
                <name>sourceEncoding</name>
                <value>
                    <string>UTF-8</string>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>internTags</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>readPOS</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>readChunk</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>useDefaultExcludes</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>includeHidden</name>
                <value>
                    <boolean>false</boolean>
                </value>
            </nameValuePair>
        </configurationParameterSettings>
        <typeSystemDescription/>
        <fsIndexCollection/>
        <capabilities>
            <capability>
                <inputs/>
                <outputs>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Sentence</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk</type>
                </outputs>
                <languagesSupported/>
            </capability>
        </capabilities>
        <operationalProperties>
            <modifiesCas>true</modifiesCas>
            <multipleDeploymentAllowed>false</multipleDeploymentAllowed>
            <outputsNewCASes>true</outputsNewCASes>
        </operationalProperties>
    </processingResourceMetaData>
    <externalResourceDependencies>
        <externalResourceDependency>
            <key>resolver</key>
            <description>Name of optional external (UIMA) resource that contains the Locator for a (Spring)
ResourcePatternResolver implementation for locating (spring) resources.</description>
            <interfaceName>java.lang.Object</interfaceName>
            <optional>true</optional>
        </externalResourceDependency>
    </externalResourceDependencies>
</collectionReaderDescription>
