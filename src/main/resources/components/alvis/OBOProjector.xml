<alvisnlp-doc author="" date="" short-target="OBOProjector" target="org.bibliome.alvisnlp.modules.trie.OBOProjector">
  <synopsis>
    <p>Projects OBO terms and synonyms on sections.</p>
  </synopsis>

  <module-doc>
    <description>
      <p><this/> reads <param name="oboFiles"/> in <a href="XXX">OBO format</a> and searches for term names and synonyms in sections.</p>
      <p>The parameters <param name="allowJoined"/>, <param name="allUpperCaseInsensitive"/>, <param name="caseInsensitive"/>, <param name="ignoreDiacritics"/>, <param name="joinDash"/>, <param name="matchStartCaseInsensitive"/>, <param name="skipConsecutiveWhitespaces"/>, <param name="skipWhitespace"/> and <param name="wordStartCaseInsensitive"/> control the matching between the section and the entry keys.</p>
      <p>The <param name="subject"/> parameter specifies which text of the section should be matched. There are two options:
      <ul>
	<li>the entries are matched on the contents of the section, <param name="subject"/> can also control if matches boundaries coincide with word delimiters;</li>
	<li>the entries are matched on the feature value of annotations of a given layer separated by a whitespace, in this way entries can be searched against word lemmas for instance.</li>
      </ul>
      </p>
      <p><this/> creates an annotation for each matched entry and adds these annotations to the layer named <param name="targetLayerName"/>. The created annotations will have features <param name="nameFeature"/>, <param name="idFeature"/> and <param name="pathFeature"/> set to the matched term name, identifier and path.</p>
      <p>If specified, then <this/> assumes that <param name="trieSource"/> contains a compiled version of the dictionary. <param name="dictFile"/> is not read. If specified, <this/> writes a compiled version of the dictionary in <param name="trieSink"/>. The use of compiled dictionaries may accelerate the processing for large dictionaries.</p>
    </description>
    
    <param-doc mandatory="default: true" name="active" short-type="Expression" type="alvisnlp.corpus.expressions.Expression">
      <p>This expression is evaluated as a boolean with the corpus as the context element, the module will process the document only if the result is true.</p>
    </param-doc>
  
    <param-doc mandatory="default: false" name="skipWhitespace" short-type="Boolean" type="java.lang.Boolean">
      <p>Either the match allows arbitrary insertion of whitespace characters in the subject. For instance, the contents <em>amino acid</em> matches the entry <em>aminoacid</em>.</p>
    </param-doc>
  
    <param-doc mandatory="optional" name="constantAnnotationFeatures" short-type="Mapping" type="alvisnlp.module.types.Mapping">
      <p>Constant features to add to each annotation created by this module</p>
    </param-doc>
  
    <param-doc mandatory="default: WORD" name="subject" short-type="Subject" type="org.bibliome.alvisnlp.modules.trie.Subject">
      <p>Specifies the contents to match.</p>
    </param-doc>
  
    <param-doc mandatory="optional" name="trieSink" short-type="OutputFile" type="org.bibliome.util.files.OutputFile">
      <p>If set, <this/> writes the compiled dictionary to the specified file.</p>
    </param-doc>
  
    <param-doc mandatory="optional" name="trieSource" short-type="InputFile" type="org.bibliome.util.files.InputFile">
      <p>If set, read the compiled dictionary from the specified files. Compiled dictionaries are generally faster for large dictionaries.</p>
    </param-doc>
  
    <param-doc mandatory="default: false" name="skipConsecutiveWhitespaces" short-type="Boolean" type="java.lang.Boolean">
      <p>Either the match allows insertion of consecutive whitespace characters in the subject. For instance, the contents <em>amino  acid</em> matches the entry <em>amino acid</em>.</p>
    </param-doc>
  
    <param-doc mandatory="required" name="oboFiles" short-type="String[]" type="java.lang.String[]">
      <p>Path to the source OBO files.</p>
    </param-doc>
  
    <param-doc mandatory="default: true" name="documentFilter" short-type="Expression" type="alvisnlp.corpus.expressions.Expression">
      <p>Only process document that satisfy this filter.</p>
    </param-doc>
  
    <param-doc mandatory="optional" name="idFeature" short-type="String" type="java.lang.String">
      <p>Feature where to store the matched term identifier.</p>
    </param-doc>
   
    <param-doc mandatory="default: all" name="multipleEntryBehaviour" short-type="MultipleEntryBehaviour" type="org.bibliome.alvisnlp.modules.trie.MultipleEntryBehaviour">
      <p>Specifies the behavious of <this/> if <param name="dictFile"/> contains several entries with the same key.</p>
    </param-doc>
  
    <param-doc mandatory="default: false" name="allUpperCaseInsensitive" short-type="Boolean" type="java.lang.Boolean">
      <p>Either the match allows case substitution on all characters in words that are all upper case.</p>
    </param-doc>
   
    <param-doc mandatory="default: false" name="joinDash" short-type="Boolean" type="java.lang.Boolean">
      <p>Either to treat dash characters (-) as whitespace characters if <param name="allowJoined"/> is <code>true</code>. For instance, the contents <em>aminoacid</em> matches the entry <em>amino-acid</em>.</p>
    </param-doc>
  
    <param-doc mandatory="default: false" name="wordStartCaseInsensitive" short-type="Boolean" type="java.lang.Boolean">
      <p>Either the match allows case substitution on the first character of words.</p>
    </param-doc>
  
    <param-doc mandatory="default: false" name="caseInsensitive" short-type="Boolean" type="java.lang.Boolean">
      <p>Either the match allows case substitutions on all characters.</p>
    </param-doc>
  
    <param-doc mandatory="default: false" name="allowJoined" short-type="Boolean" type="java.lang.Boolean">
      <p>Either the match allows arbitrary suppression of whitespace characters in the subject. For instance, the contents <em>aminoacid</em> matches the entry <em>amino acid</em>.</p>
    </param-doc>
 
    <param-doc mandatory="default: true" name="sectionFilter" short-type="Expression" type="alvisnlp.corpus.expressions.Expression">
      <p>Process only sections that satisfy this filter.</p>
    </param-doc>
  
    <param-doc mandatory="optional" name="nameFeature" short-type="String" type="java.lang.String">
      <p>Feature where to store the matched term name.</p>
    </param-doc>
    
    <param-doc mandatory="default: false" name="ignoreDiacritics" short-type="Boolean" type="java.lang.Boolean">
      <p>Either the match allows dicacritics substitutions on all characters. For instance the contents <em>acide amine</em> matches the entry <em>acide amin√©</em>.</p>
    </param-doc>
  
    <param-doc mandatory="default: false" name="matchStartCaseInsensitive" short-type="Boolean" type="java.lang.Boolean">
      <p>Either the match allows case substitution on the first character of the entry key.</p>
    </param-doc>
 
    <param-doc mandatory="required" name="targetLayerName" short-type="String" type="java.lang.String">
      <p>Name of the layer that contains the match annotations.</p>
    </param-doc>
   
    <param-doc mandatory="optional" name="pathFeature" short-type="String" type="java.lang.String">
      <p>Feature where to store the matched term path.</p>
    </param-doc>
   
    <param-doc mandatory="default: false" name="keepDBXref" short-type="Boolean" type="java.lang.Boolean">
      <p>Add all database cross-references of the term. <this/> creates a feature key-value pair for each <em>dbxref</em> in the matching term.</p>
    </param-doc>
   
    <param-doc mandatory="optional" name="versionFeature" short-type="String" type="java.lang.String">
      <p>Name of the feature where to store the ontology version.</p>
    </param-doc>
  
    <param-doc mandatory="optional" name="ancestorsFeature" short-type="String" type="java.lang.String">
      <p>Name of the feature that contains the term ancestors ids.</p>
    </param-doc>
  
    <param-doc mandatory="optional" name="childrenFeature" short-type="String" type="java.lang.String">
      <p>Name of the feature that contains the term children ids.</p>
    </param-doc>
  
    <param-doc mandatory="optional" name="parentsFeature" short-type="String" type="java.lang.String">
      <p>Name of the feature that contains the term parents ids.</p>
    </param-doc>
  </module-doc>
</alvisnlp-doc>
