<?xml version="1.0" encoding="UTF-8"?>
<analysisEngineDescription xmlns="http://uima.apache.org/resourceSpecifier">
    <frameworkImplementation>org.apache.uima.java</frameworkImplementation>
    <primitive>true</primitive>
    <annotatorImplementationName>de.tudarmstadt.ukp.dkpro.core.treetagger.TreeTaggerPosTagger</annotatorImplementationName>
    <analysisEngineMetaData>
        <name>de.tudarmstadt.ukp.dkpro.core.treetagger.TreeTaggerPosTagger</name>
        <description>Part-of-Speech and lemmatizer annotator using TreeTagger.</description>
        <version>1.8.0-SNAPSHOT</version>
        <vendor>DKPro Core Project</vendor>
        <copyright>Copyright 2010-2015
                            Ubiquitous Knowledge Processing (UKP) Lab
                            Technische Universit√§t Darmstadt</copyright>
        <configurationParameters>
            <configurationParameter>
                <name>language</name>
                <description>Use this language instead of the document language to resolve the model.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>modelVariant</name>
                <description>Override the default variant used to locate the model.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>executablePath</name>
                <description>Use this TreeTagger executable instead of trying to locate the executable automatically.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>modelLocation</name>
                <description>Load the model from this location instead of locating the model automatically.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>modelEncoding</name>
                <description>The character encoding used by the model.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>POSMappingLocation</name>
                <description>Load the part-of-speech tag to UIMA type mapping from this location instead of locating
the mapping automatically.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>internTags</name>
                <description>Use the String#intern() method on tags. This is usually a good idea to avoid
spaming the heap with thousands of strings representing only a few different tags.

Default: true</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>printTagSet</name>
                <description>Log the tag set(s) when a model is loaded.

Default: false</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>performanceMode</name>
                <description>TT4J setting: Disable some sanity checks, e.g. whether tokens contain line breaks (which is
not allowed). Turning this on will increase your performance, but the wrapper may throw
exceptions if illegal data is provided.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>writePOS</name>
                <description>Write part-of-speech information.

Default: true</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>writeLemma</name>
                <description>Write lemma information.

Default: true</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
        </configurationParameters>
        <configurationParameterSettings>
            <nameValuePair>
                <name>internTags</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>printTagSet</name>
                <value>
                    <boolean>false</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>performanceMode</name>
                <value>
                    <boolean>false</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>writePOS</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>writeLemma</name>
                <value>
                    <boolean>true</boolean>
                </value>
            </nameValuePair>
        </configurationParameterSettings>
        <typeSystemDescription/>
        <typePriorities/>
        <fsIndexCollection/>
        <capabilities>
            <capability>
                <inputs>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token</type>
                </inputs>
                <outputs>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</type>
                    <type>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Lemma</type>
                </outputs>
                <languagesSupported/>
            </capability>
        </capabilities>
        <operationalProperties>
            <modifiesCas>true</modifiesCas>
            <multipleDeploymentAllowed>true</multipleDeploymentAllowed>
            <outputsNewCASes>false</outputsNewCASes>
        </operationalProperties>
    </analysisEngineMetaData>
</analysisEngineDescription>
